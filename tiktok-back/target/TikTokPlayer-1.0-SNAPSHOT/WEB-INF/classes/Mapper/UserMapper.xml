<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiktok.Dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.tiktok.Entity.User.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="user_nickname" jdbcType="VARCHAR" property="userNickName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="avatar" jdbcType="VARCHAR" property="avatar" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="base_column">
        user_id,user_name,user_nickname,password,avatar,create_time,update_time
    </sql>

    <select id="getUserByUserName" parameterType="com.tiktok.Entity.User.User" resultMap="BaseResultMap">
        select
        <include refid="base_column"/>
        from tiktok_user
        where user_name = #{userName,jdbcType=VARCHAR}
    </select>

    <select id="getUserByUserId" parameterType="com.tiktok.Entity.User.User" resultMap="BaseResultMap">
        select
        <include refid="base_column"/>
        from tiktok_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    
    <insert id="addUser" parameterType="com.tiktok.Entity.User.User">
        insert into tiktok_user(user_id, user_name, user_nickname, password, avatar) values (#{user_id}, #{user_name}, #{user_nickname}, #{password}, #{avatar})
    </insert>
</mapper>